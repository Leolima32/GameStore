í
PC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\CartItem.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
Entities #
{ 
public		 

class		 
CartItem		 
:		 

BaseEntity		 &
{

 
	protected 
CartItem 
( 
) 
{ 
}  
public 
CartItem 
( 
Product 
product  '
,' (
int) ,
quantity- 5
)5 6
{ 	
Product 
= 
product 
; 
Quantity 
= 
quantity 
;  
if 
( 
Product 
is 
null 
)  
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 E
,E F
$strG `
)` a
)a b
;b c
if 
( 
Quantity 
< 
$num 
) 
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 F
,F G
$strH f
)f g
)g h
;h i
} 	
public 
Guid 
ShoppingCartId "
{# $
get% (
;( )
private* 1
set2 5
;5 6
}7 8
public 
ShoppingCart 
ShoppingCart (
{) *
get+ .
;. /
private0 7
set8 ;
;; <
}= >
public 
Guid 
	ProductId 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public 
Product 
Product 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
public 
int 
Quantity 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
public 
double 
	ItemPrice 
{ 	
get   
{!! 
if"" 
("" 
Product"" 
!="" 
null"" #
)""# $
{## 
return$$ 
Product$$ "
.$$" #
Price$$# (
;$$( )
}%% 
else&& 
{'' 
throw(( 
new(( 
ProductNotExistent(( 0
(((0 1
)((1 2
;((2 3
})) 
}** 
}++ 	
public-- 
double-- 

TotalValue--  
{.. 	
get// 
{00 
if11 
(11 
Quantity11 
>11 
$num11  
)11  !
{22 
return33 
	ItemPrice33 $
*33% &
Quantity33' /
;33/ 0
}44 
else55 
{66 
return77 
	ItemPrice77 $
;77$ %
}88 
}99 
}:: 	
public<< 
void<< 
ChangeQuantityBy<< $
(<<$ %
int<<% (
value<<) .
)<<. /
{== 	
if?? 
(?? 
Quantity?? 
+?? 
value??  
>??! "
$num??# $
)??$ %
Quantity@@ 
+=@@ 
value@@ !
;@@! "
elseAA 
throwBB 
newBB 6
*CartItemQuantityCannotBeBelowZeroExceptionBB D
(BBD E
)BBE F
;BBF G
}CC 	
}DD 
}EE  $
YC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\Common\BaseEntity.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
Entities #
.# $
Common$ *
{ 
public

 

abstract

 
class

 

BaseEntity

 $
{ 
[ 	
	NotMapped	 
] 
public 
IList 
< 
Nonconformity "
>" #
Nonconformities$ 3
{4 5
get6 9
;9 :
private; B
setC F
;F G
}H I
=J K
newL O
ListP T
<T U
NonconformityU b
>b c
(c d
)d e
;e f
[ 	
	NotMapped	 
] 
public 
bool 
	IsInvalid 
{ 
get  #
{$ %
return& ,
Nonconformities- <
.< =
Count= B
>C D
$numE F
;F G
}H I
}J K
[ 	
	NotMapped	 
] 
public 
bool 
IsValid 
{ 
get !
{" #
return$ *
Nonconformities+ :
.: ;
Count; @
==A C
$numD E
;E F
}G H
}I J
public 

BaseEntity 
( 
) 
{ 	
if 
( 
Id 
== 
Guid 
. 
Empty  
)  !
{ 
Id 
= 
Guid 
. 
NewGuid !
(! "
)" #
;# $
} 
} 	
public 
Guid 
Id 
{ 
get 
; 
internal &
set' *
;* +
}, -
public 
DateTime 
CreatedDate #
{$ %
get& )
;) *
private+ 2
set3 6
;6 7
}8 9
public 
DateTime 
LastUpdated #
{$ %
get& )
;) *
private+ 2
set3 6
;6 7
}8 9
public 
bool 
Active 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public!! 
void!! 
AddNonconformity!! $
(!!$ %
Nonconformity!!% 2
nonconformity!!3 @
)!!@ A
{"" 	
Nonconformities## 
.## 
Add## 
(##  
nonconformity##  -
)##- .
;##. /
}$$ 	
public&& 
void&& 
AddNonconformity&& $
(&&$ %
params&&% +

BaseEntity&&, 6
[&&6 7
]&&7 8
baseEntities&&9 E
)&&E F
{'' 	
foreach(( 
((( 
var(( 
item(( 
in((  
baseEntities((! -
)((- .
{)) 
if** 
(** 
item** 
!=** 
null**  
)**  !
Nonconformities++ #
=++$ %
Nonconformities++& 5
.++5 6
Concat++6 <
(++< =
item++= A
.++A B
Nonconformities++B Q
)++Q R
.++R S
ToList++S Y
(++Y Z
)++Z [
;++[ \
},, 
}-- 	
public// 
void// 
AddNonconformity// $
(//$ %
params//% +
ValueObject//, 7
[//7 8
]//8 9
baseEntities//: F
)//F G
{00 	
foreach11 
(11 
var11 
item11 
in11  
baseEntities11! -
)11- .
{22 
if33 
(33 
item33 
!=33 
null33  
)33  !
Nonconformities44 #
=44$ %
Nonconformities44& 5
.445 6
Concat446 <
(44< =
item44= A
.44A B
Nonconformities44B Q
)44Q R
.44R S
ToList44S Y
(44Y Z
)44Z [
;44[ \
}55 
}66 	
public88 
void88 

Deactivate88 
(88 
)88  
{99 	
this:: 
.:: 
Active:: 
=:: 
false:: 
;::  
};; 	
}<< 
}== ç"
VC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\Common\Payment.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
Entities #
.# $
Common$ *
{ 
public 

abstract 
class 
Payment !
:" #

BaseEntity$ .
{		 
	protected

 
Payment

 
(

 
)

 
{

 
}

 
public 
Payment 
( 
DateTime 
paidDate  (
,( )
DateTime* 2

expireDate3 =
,= >
decimal? F
totalG L
,L M
decimalN U
	totalPaidV _
,_ `
stringa g
payerh m
,m n
Emailo t
emailu z
)z {
{ 	
Number 
= 
Guid 
. 
NewGuid !
(! "
)" #
.# $
ToString$ ,
(, -
)- .
.. /
Replace/ 6
(6 7
$str7 :
,: ;
$str< >
)> ?
.? @
	Substring@ I
(I J
$numJ K
,K L
$numM O
)O P
.P Q
ToUpperQ X
(X Y
)Y Z
;Z [
PaidDate 
= 
paidDate 
;  

ExpireDate 
= 

expireDate #
;# $
Total 
= 
total 
; 
	TotalPaid 
= 
	totalPaid !
;! "
Payer 
= 
payer 
; 
Email 
= 
email 
; 
if 
( 
Total 
is 
$num 
) 
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 B
,B C
$strD ^
)^ _
)_ `
;` a
if 
( 
	TotalPaid 
< 
Total  
)  !
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 F
,F G
$strH u
)u v
)v w
;w x
if 
( 
Email 
is 
null 
) 
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 B
,B C
$strC Z
)Z [
)[ \
;\ ]
if 
( 

ExpireDate 
< 
DateTime $
.$ %
Today% *
)* +
AddNonconformity    
(    !
new  ! $
Nonconformity  % 2
(  2 3
$str  3 G
,  G H
$str  H }
)  } ~
)  ~ 
;	   
AddNonconformity"" 
("" 
Email"" "
)""" #
;""# $
}## 	
public%% 
string%% 
Number%% 
{%% 
get%% "
;%%" #
private%%$ +
set%%, /
;%%/ 0
}%%1 2
public&& 
DateTime&& 
PaidDate&&  
{&&! "
get&&# &
;&&& '
private&&( /
set&&0 3
;&&3 4
}&&5 6
public'' 
DateTime'' 

ExpireDate'' "
{''# $
get''% (
;''( )
private''* 1
set''2 5
;''5 6
}''7 8
public(( 
decimal(( 
Total(( 
{(( 
get(( "
;((" #
private(($ +
set((, /
;((/ 0
}((1 2
public)) 
decimal)) 
	TotalPaid))  
{))! "
get))# &
;))& '
private))( /
set))0 3
;))3 4
}))5 6
public** 
string** 
Payer** 
{** 
get** !
;**! "
private**# *
set**+ .
;**. /
}**0 1
public++ 
Email++ 
Email++ 
{++ 
get++  
;++  !
private++" )
set++* -
;++- .
}++/ 0
},, 
}-- ü2
VC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\Common\Product.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
Entities #
.# $
Common$ *
{		 
public

 

abstract

 
class

 
Product

 !
:

" #

BaseEntity

$ .
{ 
	protected 
Product 
( 
) 
{ 
} 
public 
Product 
( 
string 
name "
," #
EDepartment$ /

department0 :
,: ;
double< B
priceC H
,H I
stringJ P
descriptionQ \
,\ ]
string^ d
shortDescriptione u
,u v
intw z
availableQuantity	{ 
)
 
{ 	
Name 
= 
name 
; 

Department 
= 

department #
;# $
Price 
= 
price 
; 
Description 
= 
description %
;% &
ShortDescription 
= 
shortDescription /
;/ 0
AvailableQuantity 
= 
availableQuantity  1
;1 2
if 
( 
string 
. 
IsNullOrEmpty $
($ %
Name% )
)) *
)* +
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 A
,A B
$strC a
)a b
)b c
;c d
if 
( 
string 
. 
IsNullOrEmpty $
($ %
Description% 0
)0 1
)1 2
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 H
,H I
$strJ o
)o p
)p q
;q r
if 
( 
Price 
<= 
$num 
) 
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 B
,B C
$strD l
)l m
)m n
;n o
} 	
public 
string 
Name 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public 
EDepartment 

Department %
{& '
get( +
;+ ,
private- 4
set5 8
;8 9
}: ;
public   
double   
Price   
{   
get   !
;  ! "
private  # *
set  + .
;  . /
}  0 1
public!! 
int!! 
AvailableQuantity!! $
{!!% &
get!!' *
;!!* +
private!!, 3
set!!4 7
;!!7 8
}!!9 :
public"" 
string"" 
Description"" !
{""" #
get""$ '
;""' (
private"") 0
set""1 4
;""4 5
}""6 7
public## 
string## 
ShortDescription## &
{##' (
get##) ,
;##, -
private##. 5
set##6 9
;##9 :
}##; <
public$$ 
string$$ 
ImageRelativePath$$ '
{$$( )
get$$* -
;$$- .
internal$$/ 7
set$$8 ;
;$$; <
}$$= >
public&& 
ICollection&& 
<&& 
Review&& !
>&&! "
Reviews&&# *
{&&+ ,
get&&- 0
;&&0 1
private&&2 9
set&&: =
;&&= >
}&&? @
=&&A B
new&&C F
List&&G K
<&&K L
Review&&L R
>&&R S
(&&S T
)&&T U
;&&U V
[(( 	
	NotMapped((	 
](( 
public)) 
double)) 
?)) 

UsersScore)) !
{** 	
get++ 
{,, 
if-- 
(-- 
Reviews-- 
?-- 
.-- 
Count-- "
>--# $
$num--% &
)--& '
return.. 
Math.. 
...  
Round..  %
(..% &
Reviews..& -
...- .
Sum... 1
(..1 2
_..2 3
=>..4 6
_..7 8
...8 9
Rating..9 ?
)..? @
/..A B
Reviews..C J
...J K
Count..K P
,..P Q
$num..R S
)..S T
;..T U
else// 
return00 
null00 
;00  
}11 
set22 
{33 
value44 
=44 
null44 
;44 
}55 
}66 	
public88 
void88 

ChangeName88 
(88 
string88 %
name88& *
)88* +
{99 	
Name:: 
=:: 
name:: 
;:: 
};; 	
public== 
void== 
ChangePrice== 
(==  
double==  &
price==' ,
)==, -
{>> 	
Price?? 
=?? 
price?? 
;?? 
}@@ 	
publicBB 
voidBB #
ChangeAvailableQuantityBB +
(BB+ ,
intBB, /
quantityBB0 8
)BB8 9
{CC 	
AvailableQuantityDD 
=DD 
quantityDD  (
;DD( )
}EE 	
publicGG 
voidGG 
ChangeDescriptionGG %
(GG% &
stringGG& ,
descriptionGG- 8
)GG8 9
{HH 	
DescriptionII 
=II 
descriptionII %
;II% &
}JJ 	
publicLL 
voidLL "
ChangeShortDescriptionLL *
(LL* +
stringLL+ 1
shortDescriptionLL2 B
)LLB C
{MM 	
ShortDescriptionNN 
=NN 
shortDescriptionNN /
;NN/ 0
}OO 	
publicQQ 
voidQQ 
ChangeImagePathQQ #
(QQ# $
stringQQ$ *
	imagePathQQ+ 4
)QQ4 5
{RR 	
ImageRelativePathSS 
=SS 
	imagePathSS  )
;SS) *
}TT 	
}UU 
}VV æ
ZC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\Common\ValueObject.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
Entities #
.# $
Common$ *
{ 
public 

class 
ValueObject 
{ 
[		 	
	NotMapped			 
]		 
public

 
IList

 
<

 
Nonconformity

 "
>

" #
Nonconformities

$ 3
{

5 6
get

7 :
;

: ;
private

< C
set

D G
;

G H
}

I J
=

K L
new

M P
List

Q U
<

U V
Nonconformity

V c
>

c d
(

d e
)

e f
;

f g
[ 	
	NotMapped	 
] 
public 
bool 
	IsInvalid 
{ 
get  #
{$ %
return& ,
Nonconformities- <
.< =
Count= B
>C D
$numE F
;F G
}H I
}J K
[ 	
	NotMapped	 
] 
public 
bool 
IsValid 
{ 
get !
{" #
return# )
Nonconformities* 9
.9 :
Count: ?
==@ B
$numC D
;D E
}F G
}H I
public 
void 
AddNonconformity $
($ %
Nonconformity% 2
nonconformity3 @
)@ A
{B C
Nonconformities 
. 
Add 
(  
nonconformity  -
)- .
;. /
} 	
} 
} Ñ
OC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\Company.cs
	namespace

 	
	GameStore


 
.

 
Domain

 
.

 
Entities

 #
{ 
public 

class 
Company 
: 

BaseEntity %
{ 
	protected 
Company 
( 
) 
{ 
} 
public 
Company 
( 
CompanyName "
name# '
,' (
DateTime) 1
founded2 9
)9 :
{ 	
Name 
= 
name 
; 
Founded 
= 
founded 
; 
if 
( 
String 
. 
IsNullOrEmpty $
($ %
Name% )
.) *
FantasyName* 5
)5 6
)6 7
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 M
,M N
$strO m
)m n
)n o
;o p
} 	
public 
CompanyName 
Name 
{  !
get" %
;% &
private' .
set/ 2
;2 3
}4 5
public 
DateTime 
Founded 
{  !
get" %
;% &
private' .
set/ 2
;2 3
}4 5
public 
string 
LogoPath 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
public 
ICollection 
< 
GameDeveloper (
>( )
GameDevelopers* 8
{9 :
get; >
;> ?
private@ G
setH K
;K L
}M N
public 
ICollection 
< 
GamePublisher (
>( )
GamePublishers* 8
{9 :
get; >
;> ?
private@ G
setH K
;K L
}M N
public   
void   

ChangeName   
(   
string   %
name  & *
)  * +
{  , -
Name!! 
=!! 
new!! 
CompanyName!! "
(!!" #
name!!# '
)!!' (
;!!( )
}"" 	
}## 
}$$ ¨
YC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\CreditCardPayment.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
Entities #
{ 
public 

class 
CreditCardPayment "
:" #
Payment$ +
{		 
	protected

 
CreditCardPayment

 #
(

# $
)

$ %
{

& '
}

( )
public 
CreditCardPayment  
(  !
string 
cardHolderName !
,! "
string 

cardNumber 
, 
DateTime 
paidDate 
, 
DateTime 

expireDate 
,  
decimal 
total 
, 
decimal 
	totalPaid 
, 
string 
payer 
, 
Email 
email 
) 
: 
base 
(  
paidDate 
, 

expireDate 
, 
total 
, 
	totalPaid 
, 
payer 
, 
email 
) 
{ 	
CardHolderName 
= 
cardHolderName +
;+ ,

CardNumber 
= 

cardNumber #
;# $
} 	
public 
string 
CardHolderName $
{% &
get' *
;* +
private, 3
set4 7
;7 8
}9 :
public   
string   

CardNumber    
{  ! "
get  # &
;  & '
private  ( /
set  0 3
;  3 4
}  5 6
}!! 
}"" î
YC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\Enums\EDepartment.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
Entities #
.# $
Enums$ )
{ 
public 

enum 
EDepartment 
{ 
Game 
, 
Console 
, 
	Accessory 
, 
Miscellaneous 
}		 
}

 Ð$
LC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\Game.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
Entities #
{ 
public		 

class		 
Game		 
:		 
Product		 
{

 
	protected 
Game 
( 
) 
{ 
} 
public 
Game 
( 
string 
name 
, 
string 
description 
, 
string 
shortDescription #
,# $
EDepartment 

department "
," #
double 
price 
, 
DateTime 
releaseDate  
,  !
int 
availableQuantity !
) 
: 
base 
( 
name 
, 

department 
, 
price 
, 
description 
, 
shortDescription  
,  !
availableQuantity !
)! "
{ 	
ReleaseDate 
= 
releaseDate %
;% &
} 	
public 
DateTime 
ReleaseDate #
{$ %
get& )
;) *
private+ 2
set3 6
;6 7
}8 9
public   
string   "
CoverImageRelativePath   ,
{  - .
get  . 1
;  1 2
private  3 :
set  ; >
;  > ?
}  @ A
public"" 
ICollection"" 
<"" 
GamePlatform"" '
>""' (
GamePlatforms"") 6
{""7 8
get""9 <
;""< =
private""> E
set""F I
;""I J
}""K L
public## 
ICollection## 
<## 
	GameGenre## $
>##$ %

GameGenres##& 0
{##1 2
get##3 6
;##6 7
private##8 ?
set##@ C
;##C D
}##E F
public$$ 
ICollection$$ 
<$$ 
GameDeveloper$$ (
>$$( )
GameDevelopers$$* 8
{$$9 :
get$$; >
;$$> ?
private$$@ G
set$$H K
;$$K L
}$$M N
public%% 
ICollection%% 
<%% 
GamePublisher%% (
>%%( )
GamePublishers%%* 8
{%%9 :
get%%; >
;%%> ?
private%%@ G
set%%H K
;%%K L
}%%M N
public'' 
void''  
ChangeCoverImagePath'' (
(''( )
string'') /
path''0 4
)''4 5
{''6 7"
CoverImageRelativePath(( "
=((# $
path((% )
;(() *
})) 	
public++ 
void++  
ChangeThumbImagePath++ (
(++( )
string++) /
path++0 4
)++4 5
{++6 7
ImageRelativePath,, 
=,, 
path,,  $
;,,$ %
}-- 	
public// 
void// 
ChangeReleaseDate// %
(//% &
DateTime//& .
date/// 3
)//3 4
{//5 6
ReleaseDate00 
=00 
date00 
;00 
}11 	
public33 
void33  
ChangeDevelopersList33 (
(33( )
ICollection33) 4
<334 5
GameDeveloper335 B
>33B C
gameDevelopers33D R
)33R S
{33T U
GameDevelopers44 
=44 
gameDevelopers44 +
;44+ ,
}55 	
public77 
void77  
ChangePublishersList77 (
(77( )
ICollection77) 4
<774 5
GamePublisher775 B
>77B C
gamePublishers77D R
)77R S
{77T U
GamePublishers88 
=88 
gamePublishers88 +
;88+ ,
}99 	
public;; 
void;; 
ChangeGenresList;; $
(;;$ %
ICollection;;% 0
<;;0 1
	GameGenre;;1 :
>;;: ;

gameGenres;;< F
);;F G
{;;H I

GameGenres<< 
=<< 

gameGenres<< #
;<<# $
}== 	
public?? 
void?? 
ChangePlatformsList?? '
(??' (
ICollection??( 3
<??3 4
GamePlatform??4 @
>??@ A
gamePlatforms??B O
)??O P
{??Q R
GamePlatforms@@ 
=@@ 
gamePlatforms@@ )
;@@) *
}AA 	
}BB 
}CC ¡
MC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\Genre.cs
	namespace		 	
	GameStore		
 
.		 
Domain		 
.		 
Entities		 #
{

 
public 

class 
Genre 
: 

BaseEntity #
{ 
	protected 
Genre 
( 
) 
{ 
} 
public 
Genre 
( 
string 
name  
)  !
{ 	
Name 
= 
name 
; 
if 
( 
String 
. 
IsNullOrEmpty $
($ %
Name% )
)) *
)* +
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 ?
,? @
$strA ]
)] ^
)^ _
;_ `
} 	
public 
string 
Name 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public 
string 
Description !
{" #
get$ '
;' (
private) 0
set1 4
;4 5
}6 7
public 
ICollection 
< 
	GameGenre $
>$ %

GameGenres& 0
{1 2
get3 6
;6 7
private8 ?
set@ C
;C D
}E F
public 
void 

ChangeName 
( 
string %
name& *
)* +
{, -
Name 
= 
name 
; 
} 	
} 
} à
MC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\Order.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
Entities #
{ 
public 

class 
Order 
: 

BaseEntity #
{ 
	protected		 
Order		 
(		 
)		 
{		 
}		 
public

 
Order

 
(

 
Guid

 
userId

  
,

  !
ShoppingCart

" .
shoppingCart

/ ;
,

; <
Payment

= D
payment

E L
)

L M
{ 	
UserId 
= 
userId 
; 
ShoppingCart 
= 
shoppingCart '
;' (
FormOfPayment 
= 
payment #
;# $
if 
( 
ShoppingCart 
is 
null  $
)$ %
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 G
,G H
$strI {
){ |
)| }
;} ~
if 
( 
FormOfPayment 
is  
null! %
)% &
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 B
,B C
$strD z
)z {
){ |
;| }
AddNonconformity 
( 
ShoppingCart )
,) *
FormOfPayment* 7
)7 8
;8 9
} 	
public 
Guid 
UserId 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public 
Payment 
FormOfPayment $
{% &
get' *
;* +
private, 3
set4 7
;7 8
}9 :
public 
Guid 
ShoppingCartId "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
ShoppingCart 
ShoppingCart (
{) *
get+ .
;. /
private0 7
set8 ;
;; <
}= >
} 
} í
UC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\PayPalPayment.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
Entities #
{ 
public 

class 
PayPalPayment 
:  
Payment! (
{ 
	protected		 
PayPalPayment		 
(		  
)		  !
{		" #
}		$ %
public

 
PayPalPayment

 
(

 
string 
transactionCode "
," #
DateTime 
paidDate 
, 
DateTime 

expireDate 
,  
decimal 
total 
, 
decimal 
	totalPaid 
, 
string 
payer 
, 
Email 
email 
) 
: 
base 
(  
paidDate 
, 

expireDate 
, 
total 
, 
	totalPaid 
, 
payer 
, 
email 
) 
{ 	
TransactionCode 
= 
transactionCode -
;- .
if 
( 
String 
. 
IsNullOrEmpty $
($ %
TransactionCode% 4
)4 5
)5 6
{ 
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 L
,L M
$strN p
)p q
)q r
;r s
} 
} 	
public!! 
string!! 
TransactionCode!! %
{!!& '
get!!( +
;!!+ ,
private!!- 4
set!!5 8
;!!8 9
}!!: ;
}"" 
}## 
PC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\Platform.cs
	namespace

 	
	GameStore


 
.

 
Domain

 
.

 
Entities

 #
{ 
public 

class 
Platform 
: 

BaseEntity %
{ 
public 
Platform 
( 
string 
name #
)# $
{ 	
Name 
= 
name 
; 
if 
( 
String 
. 
IsNullOrEmpty $
($ %
Name% )
)) *
)* +
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 B
,B C
$strD l
)l m
)m n
;n o
} 	
public 
string 
Name 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public 
ICollection 
< 
GamePlatform '
>' (
GamePlatforms) 6
{7 8
get9 <
;< =
set> A
;A B
}C D
public 
void 

ChangeName 
( 
string %
name& *
)* +
{, -
Name 
= 
name 
; 
} 	
} 
} ö
kC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\ReleationshipEntities\GameDeveloper.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
Entities #
.# $!
ReleationshipEntities$ 9
{ 
public 

class 
GameDeveloper 
{ 
public 
Guid 
GameId 
{ 
get  
;  !
set" %
;% &
}' (
public 
Game 
Game 
{ 
get 
; 
set  #
;# $
}% &
public		 
Guid		 
DeveloperId		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
Company

 
	Developer

  
{

! "
get

# &
;

& '
set

( +
;

+ ,
}

- .
} 
} ä
gC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\ReleationshipEntities\GameGenre.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
Entities #
.# $!
ReleationshipEntities$ 9
{ 
public 

class 
	GameGenre 
{ 
public 
Guid 
GameId 
{ 
get  
;  !
set" %
;% &
}' (
public 
Game 
Game 
{ 
get 
; 
set  #
;# $
}% &
public

 
Guid

 
GenreId

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
public 
Genre 
Genre 
{ 
get  
;  !
set" %
;% &
}' (
} 
} ó
jC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\ReleationshipEntities\GamePlatform.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
Entities #
.# $!
ReleationshipEntities$ 9
{ 
public 

class 
GamePlatform 
{ 
public 
Guid 
GameId 
{ 
get  
;  !
set" %
;% &
}' (
public 
Game 
Game 
{ 
get 
; 
set  #
;# $
}% &
public

 
Guid

 

PlatformId

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
public 
Platform 
Platform  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
} ö
kC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\ReleationshipEntities\GamePublisher.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
Entities #
.# $!
ReleationshipEntities$ 9
{ 
public 

class 
GamePublisher 
{ 
public 
Guid 
GameId 
{ 
get  
;  !
set" %
;% &
}' (
public 
Game 
Game 
{ 
get 
; 
set  #
;# $
}% &
public

 
Guid

 
PublisherId

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 
Company 
	Publisher  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
} ô
NC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\Review.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
Entities #
{ 
public 

class 
Review 
: 

BaseEntity #
{ 
public 
Review 
( 
Guid 
userId !
,! "
Guid# '
	productId( 1
,1 2
double3 9
rating: @
)@ A
{		 	
UserId

 
=

 
userId

 
;

 
	ProductId 
= 
	productId !
;! "
Rating 
= 
rating 
; 
} 	
public 
Review 
( 
Guid 
userId !
,! "
Guid# '
	productId( 1
,1 2
double3 9
rating: @
,@ A
stringB H
considerationsI W
)W X
{ 	
UserId 
= 
userId 
; 
	ProductId 
= 
	productId !
;! "
Rating 
= 
rating 
; 
Considerations 
= 
considerations +
;+ ,
} 	
public 
string 
Considerations $
{% &
get' *
;* +
private, 3
set4 7
;7 8
}9 :
public 
Guid 
UserId 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public 
double 
Rating 
{ 
get "
;" #
private$ +
set, /
;/ 0
}1 2
public 
Guid 
	ProductId 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
public 
Product 
Product 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ;
TC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\ShoppingCart.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
Entities #
{ 
public		 

class		 
ShoppingCart		 
:		 

BaseEntity		  *
{

 
	protected 
ShoppingCart 
( 
)  
{! "
}# $
public 
ShoppingCart 
( 
Guid  
userId! '
)' (
{ 	
UserId 
= 
userId 
; 
} 	
public 
ShoppingCart 
( 
Guid  
userId! '
,' (
CartItem) 1
item2 6
)6 7
{ 	
UserId 
= 
userId 
; 
AddItem 
( 
item 
) 
; 
} 	
public 
ShoppingCart 
( 
Guid  
userId! '
,' (
IEnumerable) 4
<4 5
CartItem5 =
>= >
listOfItems? J
)J K
{ 	
UserId 
= 
userId 
; 
foreach 
( 
var 
item 
in  
listOfItems! ,
), -
AddItem 
( 
item 
) 
; 
} 	
public 
Guid 
UserId 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public!! 
IList!! 
<!! 
CartItem!! 
>!! 
_listOfItems!! +
=!!, -
new!!. 1
List!!2 6
<!!6 7
CartItem!!7 ?
>!!? @
(!!@ A
)!!A B
;!!B C
public## 
Guid## 
?## 
OrderId## 
{## 
get## "
;##" #
set##$ '
;##' (
}##) *
public%% 
Order%% 
Order%% 
{%% 
get%%  
;%%  !
set%%" %
;%%% &
}%%' (
public)) 
IEnumerable)) 
<)) 
CartItem)) #
>))# $
ListOfItems))% 0
{** 	
get++ 
{,, 
return-- 
_listOfItems-- #
.--# $
ToArray--$ +
(--+ ,
)--, -
;--- .
}.. 
}// 	
public11 
void11 
AddItem11 
(11 
IList11 !
<11! "
CartItem11" *
>11* +
listOfItems11, 7
)117 8
{22 	
foreach33 
(33 
var33 
item33 
in33  
listOfItems33! ,
)33, -
{44 
if55 
(55 
!55 &
QuantityIsAvailableInStock55 /
(55/ 0
item550 4
)554 5
)555 6
{66 
AddNonconformity77 $
(77$ %
new77% (
Nonconformity77) 6
(776 7
$str777 N
,77N O
$str	77P 
)
77 
)
77 
;
77 
return88 
;88 
}99 
if:: 
(:: 
!:: "
AlreadyContainThisItem:: +
(::+ ,
item::, 0
)::0 1
)::1 2
{;; 
_listOfItems<<  
.<<  !
Add<<! $
(<<$ %
item<<% )
)<<) *
;<<* +
}== 
else>> 
{?? 
var@@ 
	foundItem@@ !
=@@" #
ListOfItems@@$ /
.@@/ 0
Where@@0 5
(@@5 6
_@@6 7
=>@@8 :
_@@; <
.@@< =
Product@@= D
==@@E G
item@@H L
.@@L M
Product@@M T
)@@T U
.@@U V
FirstOrDefault@@V d
(@@d e
)@@e f
;@@f g
	foundItemAA 
.AA 
ChangeQuantityByAA .
(AA. /
itemAA/ 3
.AA3 4
QuantityAA4 <
)AA< =
;AA= >
}BB 
}CC 
}DD 	
publicFF 
voidFF 
AddItemFF 
(FF 
CartItemFF $
itemFF% )
)FF) *
{GG 	
ifHH 
(HH 
!HH &
QuantityIsAvailableInStockHH +
(HH+ ,
itemHH, 0
)HH0 1
)HH1 2
{II 
AddNonconformityJJ  
(JJ  !
newJJ! $
NonconformityJJ% 2
(JJ2 3
$strJJ3 J
,JJJ K
$str	JJL 
)
JJ 
)
JJ 
;
JJ 
returnKK 
;KK 
}LL 
ifMM 
(MM 
!MM "
AlreadyContainThisItemMM '
(MM' (
itemMM( ,
)MM, -
)MM- .
{NN 
_listOfItemsOO 
.OO 
AddOO  
(OO  !
itemOO! %
)OO% &
;OO& '
}PP 
elseQQ 
{RR 
varSS 
	foundItemSS 
=SS 
ListOfItemsSS  +
.SS+ ,
WhereSS, 1
(SS1 2
_SS2 3
=>SS4 6
_SS7 8
==SS9 ;
itemSS< @
)SS@ A
.SSA B
FirstOrDefaultSSB P
(SSP Q
)SSQ R
;SSR S
	foundItemTT 
.TT 
ChangeQuantityByTT *
(TT* +
itemTT+ /
.TT/ 0
QuantityTT0 8
)TT8 9
;TT9 :
}UU 
}VV 	
publicXX 
voidXX 

RemoveItemXX 
(XX 
CartItemXX '
itemXX( ,
)XX, -
{YY 	
_listOfItemsZZ 
.ZZ 
RemoveZZ 
(ZZ  
itemZZ  $
)ZZ$ %
;ZZ% &
}[[ 	
public]] 
bool]] "
AlreadyContainThisItem]] *
(]]* +
CartItem]]+ 3
item]]4 8
)]]8 9
{^^ 	
return__ 
ListOfItems__ 
.__ 
Where__ $
(__$ %
___% &
=>__' )
___* +
.__+ ,
Product__, 3
==__4 6
item__7 ;
.__; <
Product__< C
)__C D
.__D E
Count__E J
(__J K
)__K L
>__M N
$num__O P
;__P Q
}`` 	
publicbb 
boolbb &
QuantityIsAvailableInStockbb .
(bb. /
CartItembb/ 7
tryingToAddItembb8 G
)bbG H
{cc 	
vardd 
existingCartItemdd  
=dd! "
ListOfItemsdd# .
.dd. /
Wheredd/ 4
(dd4 5
_dd5 6
=>dd7 9
_dd: ;
.dd; <
Productdd< C
==ddD F
tryingToAddItemddG V
.ddV W
ProductddW ^
)dd^ _
.dd_ `
FirstOrDefaultdd` n
(ddn o
)ddo p
;ddp q
returnee 
(ee 
existingCartItemee $
?ee$ %
.ee% &
Quantityee& .
??ee/ 1
$numee2 3
+ee4 5
tryingToAddItemee6 E
.eeE F
QuantityeeF N
)eeN O
<eeP Q
tryingToAddItemeeR a
.eea b
Producteeb i
.eei j
AvailableQuantityeej {
;ee{ |
}ff 	
}hh 
}ii ï
LC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Entities\User.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
Entities #
{ 
public		 

class		 
User		 
:		 

BaseEntity		 !
{

 
public 
User 
( 
string 
userId !
,! "
string# )
name* .
,. /
DateTime0 8
	birthDate9 B
)B C
{ 	
UserId 
= 
userId 
; 
Name 
= 
name 
; 
	BirthDate 
= 
	birthDate !
;! "
} 	
[ 	
Key	 
] 
public 
string 
UserId 
{ 
get "
;" #
private$ +
set, /
;/ 0
}1 2
public 
string 
Name 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public 
string 
	AccessKey 
{  !
get" %
;% &
private' .
set/ 2
;2 3
}4 5
public 
DateTime 
	BirthDate !
{" #
get$ '
;' (
private) 0
set1 4
;4 5
}6 7
public 
IEnumerable 
< 
Genre  
>  !
GenreInterests" 0
{0 1
get2 5
;5 6
private7 >
set? B
;B C
}D E
public 
IEnumerable 
< 
Game 
>  
	WishsList! *
{+ ,
get- 0
;0 1
private2 9
set: =
;= >
}? @
public 
bool 
IsVipMember 
(  
)  !
{ 	
return 
DateTime 
. 
Now 
.  
Year  $
-% &
this' +
.+ ,
CreatedDate, 7
.7 8
Year8 <
>== ?
$num@ A
;A B
} 	
} 
} 
tC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Exceptions\CartItemQuantityCannotBeBelowZeroException.cs
	namespace 	
	GameStore
 
. 
Domain 
. 

Exceptions %
{& '
[ 
System 
. 
Serializable 
] 
public 

class 6
*CartItemQuantityCannotBeBelowZeroException ;
:< =
System> D
.D E
	ExceptionE N
{ 
public 6
*CartItemQuantityCannotBeBelowZeroException 9
(9 :
): ;
{< =
}> ?
public 6
*CartItemQuantityCannotBeBelowZeroException 9
(9 :
string: @
messageA H
)H I
:J K
baseL P
(P Q
messageQ X
)X Y
{Z [
}\ ]
public 6
*CartItemQuantityCannotBeBelowZeroException 9
(9 :
string: @
messageA H
,H I
SystemJ P
.P Q
	ExceptionQ Z
inner[ `
)` a
:b c
based h
(h i
messagei p
,p q
innerr w
)w x
{y z
}{ |
	protected 6
*CartItemQuantityCannotBeBelowZeroException <
(< =
System		 
.		 
Runtime		 
.		 
Serialization		 (
.		( )
SerializationInfo		) :
info		; ?
,		? @
System

 
.

 
Runtime

 
.

 
Serialization

 (
.

( )
StreamingContext

) 9
context

: A
)

A B
:

C D
base

E I
(

I J
info

J N
,

N O
context

P W
)

W X
{

Y Z
}

[ \
} 
} ÷
[C:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Exceptions\InvalidParameters.cs
	namespace 	
	GameStore
 
. 
Domain 
. 

Exceptions %
{ 
public 

class 
InvalidParameters "
:" #
	Exception$ -
{ 
} 
} ù
\C:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Exceptions\ProductNotExistent.cs
	namespace 	
	GameStore
 
. 
Domain 
. 

Exceptions %
{ 
public 

class 
ProductNotExistent #
:# $
	Exception% .
{ 
} 
} è
iC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Interfaces\Repositories\ICompanyRepository.cs
	namespace 	
	GameStore
 
. 
Domain 
. 

Interfaces %
.% &
Repositories& 2
{ 
public 

	interface 
ICompanyRepository '
:' (
IRepository) 4
<4 5
Company5 <
>< =
{ 
}		 
}

 ù
fC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Interfaces\Repositories\IGameRepository.cs
	namespace 	
	GameStore
 
. 
Domain 
. 

Interfaces %
.% &
Repositories& 2
{ 
public 

	interface 
IGameRepository $
:$ %
IRepository& 1
<1 2
Game2 6
>6 7
{		 
IEnumerable

 
<

 
Game

 
>

 
SearchByName

 &
(

& '
string

' -
search

. 4
)

4 5
;

5 6
Task 
< 
IEnumerable 
< 
dynamic  
>  !
>! "*
GetAllGamesWithDevelopersAsync# A
(A B
)B C
;C D
Task 
< 
IEnumerable 
< 
Game 
> 
> )
GetAllGamesFromThisGenreAsync  =
(= >
Guid> B
genreIdC J
)J K
;K L
Task 
< 
IEnumerable 
< 
Game 
> 
> "
GetBestRatedGamesAsync  6
(6 7
)7 8
;8 9
Task 
< 
IEnumerable 
< 
Game 
> 
> #
GetBestSellerGamesAsync  7
(7 8
)8 9
;9 :
} 
} â
gC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Interfaces\Repositories\IGenreRepository.cs
	namespace 	
	GameStore
 
. 
Domain 
. 

Interfaces %
.% &
Repositories& 2
{ 
public 

	interface 
IGenreRepository %
:% &
IRepository' 2
<2 3
Genre3 8
>8 9
{ 
} 
}		 
gC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Interfaces\Repositories\IOrderRepository.cs
	namespace 	
	GameStore
 
. 
Domain 
. 

Interfaces %
.% &
Repositories& 2
{ 
public 

	interface 
IOrderRepository %
{& '
void 
CreateOrder 
( 
Order 
order $
)$ %
;% &
} 
} ë
jC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Interfaces\Repositories\IPlatformRepository.cs
	namespace 	
	GameStore
 
. 
Domain 
. 

Interfaces %
.% &
Repositories& 2
{ 
public 

	interface 
IPlatformRepository (
:( )
IRepository* 5
<5 6
Platform6 >
>> ?
{ 
} 
}		 
kC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Interfaces\Repositories\IPublisherRepository.cs
	namespace 	
	GameStore
 
. 
Domain 
. 

Interfaces %
.% &
Repositories& 2
{ 
public 

	interface  
IPublisherRepository )
{ 
} 
} «
bC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Interfaces\Repositories\IRepository.cs
	namespace 	
	GameStore
 
. 
Domain 
. 

Interfaces %
.% &
Repositories& 2
{ 
public 

	interface 
IRepository  
<  !
T! "
>" #
where$ )
T* +
:, -

BaseEntity. 8
{		 
IEnumerable

 
<

 
T

 
>

 
GetAll

 
(

 
)

 
;

  
Task 
< 
IEnumerable 
< 
T 
> 
> 
GetAllAsync (
(( )
)) *
;* +
T 	
GetById
 
( 
Guid 
id 
) 
; 
Task 
< 
T 
> 
GetByIdAsync 
( 
Guid !
id" $
)$ %
;% &
Guid 
Add 
( 
T 
obj 
) 
; 
void 
Update 
( 
T 
obj 
) 
; 
void 
Remove 
( 
Guid 
id 
) 
; 
} 
} å
hC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Interfaces\Repositories\IReviewRepository.cs
	namespace 	
	GameStore
 
. 
Domain 
. 

Interfaces %
.% &
Repositories& 2
{ 
public 

	interface 
IReviewRepository &
:' (
IRepository) 4
<4 5
Review5 ;
>; <
{		 
IEnumerable

 
<

 
Review

 
>

  
GetReviewByProductId

 0
(

0 1
Guid

1 5
	productId

6 ?
)

? @
;

@ A
IEnumerable 
< 
Review 
> 
GetReviewByUserId -
(- .
Guid. 2
userId3 9
)9 :
;: ;
} 
} ÷
nC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Interfaces\Repositories\IShoppingCartRepository.cs
	namespace 	
	GameStore
 
. 
Domain 
. 

Interfaces %
.% &
Repositories& 2
{ 
public 

	interface #
IShoppingCartRepository ,
:, -
IRepository. 9
<9 :
ShoppingCart: F
>F G
{ 
} 
}		 ì	
bC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Interfaces\Repositories\IUnitOfWork.cs
	namespace 	
	GameStore
 
. 
Domain 
. 

Interfaces %
.% &
Repositories& 2
{ 
public 

	interface 
IUnitOfWork  
{ 
ICompanyRepository 
	Companies $
{% &
get' *
;* +
}, -
IGameRepository 
Games 
{ 
get  #
;# $
}% &
IGenreRepository 
Genres 
{  !
get" %
;% &
}' (
IPlatformRepository 
	Platforms %
{& '
get( +
;+ ,
}- .
IUserRepository		 
Users		 
{		 
get		  #
;		$ %
}		% &
IOrderRepository

 
Orders

 
{

  !
get

" %
;

% &
}

' (
IReviewRepository 
Reviews !
{" #
get$ '
;' (
}( )
void 
Dispose 
( 
) 
; 
} 
} ß
fC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\Interfaces\Repositories\IUserRepository.cs
	namespace 	
	GameStore
 
. 
Domain 
. 

Interfaces %
.% &
Repositories& 2
{ 
public 

	interface 
IUserRepository $
:$ %
IRepository& 1
<1 2
User2 6
>6 7
{ 
}		 
}

 µ	
WC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\ValueObjects\CompanyName.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
ValueObjects '
{ 
public 

class 
CompanyName 
: 
ValueObject *
{ 
public		 
CompanyName		 
(		 
string		 !
fantasyName		" -
)		- .
{

 	
FantasyName 
= 
fantasyName %
;% &
} 	
public 
string 
FantasyName !
{" #
get$ '
;' (
private) 0
set1 4
;4 5
}6 7
public 
string 

SocialName  
{! "
get# &
;& '
private( /
set0 3
;3 4
}5 6
public 
void 
AddSocialName !
(! "
string" (

socialName) 3
)3 4
{5 6

SocialName 
= 

socialName #
;# $
} 	
} 
} ½
QC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\ValueObjects\Email.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
ValueObjects '
{ 
public 

class 
Email 
: 
ValueObject $
{		 
public

 
Email

 
(

 
string

 
address

 #
)

# $
{ 	
Address 
= 
address 
; 
if 
( 
string 
. 
IsNullOrEmpty #
(# $
Address$ +
)+ ,
), -
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 B
,B C
$strD ]
)] ^
)^ _
;_ `
if 
( 
! 
Regex 
. 
IsMatch 
( 
Address %
,% &
$str	& ¶
,
¶ ·
RegexOptions
¸ Ä
.
Ä Å

IgnoreCase
Å Ï
)
Ï Ð
)
Ð Ñ
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 B
,B C
$strD c
)c d
)d e
;e f
} 	
public 
string 
Address 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
} 
} µ
YC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\ValueObjects\Nonconformity.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
ValueObjects '
{ 
public 

class 
Nonconformity 
: 
ValueObject  +
{, -
public 
Nonconformity 
( 
string #
property$ ,
,, -
string. 4
message5 <
)< =
{ 	
Property 
= 
property 
;  
Message		 
=		 
message		 
;		 
}

 	
public 
string 
Property 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
public 
string 
Message 
{ 
get  #
;# $
private% ,
set- 0
;0 1
}2 3
} 
} ö
VC:\projects\repos\GameStore\src\3 - Domain\GameStore.Domain\ValueObjects\PersonName.cs
	namespace 	
	GameStore
 
. 
Domain 
. 
ValueObjects '
{ 
public 

class 

PersonName 
: 
ValueObject )
{ 
public		 

PersonName		 
(		 
string		  
	firstName		! *
,		* +
string		, 2
lastName		3 ;
)		; <
{

 	
	FirstName 
= 
	firstName !
;! "
LastName 
= 
lastName 
;  
if 
( 
	FirstName 
. 
Length 
<  !
$num" #
)# $
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 I
,I J
$strK v
)v w
)w x
;x y
if 
( 
	FirstName 
. 
Length 
>  !
$num" $
)$ %
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 I
,I J
$strK u
)u v
)v w
;w x
if 
( 
LastName 
. 
Length 
<  
$num! "
)" #
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 H
,H I
$strI s
)s t
)t u
;u v
if 
( 
LastName 
. 
Length 
>  
$num! #
)# $
AddNonconformity  
(  !
new! $
Nonconformity% 2
(2 3
$str3 H
,H I
$strI s
)s t
)t u
;u v
} 	
public 
string 
	FirstName 
{  !
get" %
;% &
private' .
set/ 2
;2 3
}4 5
public 
string 
LastName 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
} 
} 